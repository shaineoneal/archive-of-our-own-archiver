// Generated by wxt
export {}
declare global {
  const ContentScriptContext: typeof import('wxt/client')['ContentScriptContext']
  const InvalidMatchPattern: typeof import('wxt/sandbox')['InvalidMatchPattern']
  const MatchPattern: typeof import('wxt/sandbox')['MatchPattern']
  const MigrationError: typeof import('wxt/storage')['MigrationError']
  const browser: typeof import('wxt/browser/chrome')['browser']
  const compareArrays: typeof import('C:/Users/shaine/Documents/Code Projects/ao3-archiver/utils/compareArrays')['compareArrays']
  const createIframeUi: typeof import('wxt/client')['createIframeUi']
  const createIntegratedUi: typeof import('wxt/client')['createIntegratedUi']
  const createShadowRootUi: typeof import('wxt/client')['createShadowRootUi']
  const defineAppConfig: typeof import('wxt/sandbox')['defineAppConfig']
  const defineBackground: typeof import('wxt/sandbox')['defineBackground']
  const defineConfig: typeof import('wxt')['defineConfig']
  const defineContentScript: typeof import('wxt/sandbox')['defineContentScript']
  const defineUnlistedScript: typeof import('wxt/sandbox')['defineUnlistedScript']
  const defineWxtPlugin: typeof import('wxt/sandbox')['defineWxtPlugin']
  const fakeBrowser: typeof import('wxt/testing')['fakeBrowser']
  const injectScript: typeof import('wxt/client')['injectScript']
  const log: typeof import('C:/Users/shaine/Documents/Code Projects/ao3-archiver/utils/logger')['log']
  const storage: typeof import('wxt/storage')['storage']
  const useAppConfig: typeof import('wxt/client')['useAppConfig']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useEffect: typeof import('react')['useEffect']
  const useMemo: typeof import('react')['useMemo']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const wrap: typeof import('C:/Users/shaine/Documents/Code Projects/ao3-archiver/utils/wrapper')['wrap']
}
